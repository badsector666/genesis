{"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\helpers\\inputs.ts":{"path":"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\helpers\\inputs.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":123}},"28":{"start":{"line":30,"column":17},"end":{"line":30,"column":51}},"29":{"start":{"line":31,"column":17},"end":{"line":31,"column":50}},"30":{"start":{"line":32,"column":24},"end":{"line":32,"column":65}},"31":{"start":{"line":33,"column":18},"end":{"line":33,"column":36}},"32":{"start":{"line":34,"column":24},"end":{"line":34,"column":59}},"33":{"start":{"line":35,"column":17},"end":{"line":35,"column":60}},"34":{"start":{"line":37,"column":17},"end":{"line":37,"column":82}},"35":{"start":{"line":38,"column":4},"end":{"line":38,"column":33}},"36":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}},"37":{"start":{"line":42,"column":15},"end":{"line":42,"column":57}},"38":{"start":{"line":43,"column":4},"end":{"line":43,"column":70}},"39":{"start":{"line":45,"column":0},"end":{"line":45,"column":34}},"40":{"start":{"line":47,"column":15},"end":{"line":50,"column":6}},"41":{"start":{"line":51,"column":4},"end":{"line":57,"column":7}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":40}},"43":{"start":{"line":53,"column":8},"end":{"line":56,"column":11}},"44":{"start":{"line":54,"column":12},"end":{"line":54,"column":23}},"45":{"start":{"line":55,"column":12},"end":{"line":55,"column":28}},"46":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}},"47":{"start":{"line":61,"column":17},"end":{"line":61,"column":50}},"48":{"start":{"line":62,"column":22},"end":{"line":62,"column":42}},"49":{"start":{"line":63,"column":4},"end":{"line":76,"column":5}},"50":{"start":{"line":65,"column":12},"end":{"line":65,"column":31}},"51":{"start":{"line":67,"column":12},"end":{"line":67,"column":36}},"52":{"start":{"line":69,"column":12},"end":{"line":69,"column":41}},"53":{"start":{"line":71,"column":12},"end":{"line":71,"column":46}},"54":{"start":{"line":73,"column":12},"end":{"line":73,"column":70}},"55":{"start":{"line":74,"column":12},"end":{"line":74,"column":102}},"56":{"start":{"line":75,"column":12},"end":{"line":75,"column":28}},"57":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}},"58":{"start":{"line":80,"column":4},"end":{"line":80,"column":97}},"59":{"start":{"line":82,"column":0},"end":{"line":82,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"sha256","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":15}},"loc":{"start":{"line":36,"column":23},"end":{"line":39,"column":1}},"line":36},"8":{"name":"getObjectId","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":20}},"loc":{"start":{"line":41,"column":36},"end":{"line":44,"column":1}},"line":41},"9":{"name":"getUserInput","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":21}},"loc":{"start":{"line":46,"column":32},"end":{"line":58,"column":1}},"line":46},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":23},"end":{"line":51,"column":24}},"loc":{"start":{"line":51,"column":36},"end":{"line":57,"column":5}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":24},"end":{"line":53,"column":25}},"loc":{"start":{"line":53,"column":36},"end":{"line":56,"column":9}},"line":53},"12":{"name":"getTimeframe","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":21}},"loc":{"start":{"line":60,"column":41},"end":{"line":77,"column":1}},"line":60},"13":{"name":"getCurrentDateString","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":29}},"loc":{"start":{"line":79,"column":32},"end":{"line":81,"column":1}},"line":79}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":56}},"type":"cond-expr","locations":[{"start":{"line":42,"column":32},"end":{"line":42,"column":49}},{"start":{"line":42,"column":52},"end":{"line":42,"column":56}}],"line":42},"20":{"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":39}},"type":"default-arg","locations":[{"start":{"line":60,"column":35},"end":{"line":60,"column":39}}],"line":60},"21":{"loc":{"start":{"line":63,"column":4},"end":{"line":76,"column":5}},"type":"switch","locations":[{"start":{"line":64,"column":8},"end":{"line":65,"column":31}},{"start":{"line":66,"column":8},"end":{"line":67,"column":36}},{"start":{"line":68,"column":8},"end":{"line":69,"column":41}},{"start":{"line":70,"column":8},"end":{"line":71,"column":46}},{"start":{"line":72,"column":8},"end":{"line":75,"column":28}}],"line":63}},"s":{"0":1,"1":8,"2":8,"3":8,"4":8,"5":8,"6":0,"7":8,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":8,"21":8,"22":1,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":2,"35":2,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1},"f":{"0":8,"1":0,"2":0,"3":1,"4":0,"5":1,"6":3,"7":2,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[8,0],"3":[8,0],"4":[8,8],"5":[0,8],"6":[8,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[8,0],"15":[8,8],"16":[1,1,1],"17":[1,2],"18":[3,3],"19":[1,0],"20":[0],"21":[0,0,0,0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/helpers/inputs.ts","sources":["C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/helpers/inputs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAA4B;AAC5B,mDAAqC;AAErC,kEAAiC;AACjC,qCAAmC;AAEnC,4DAA0D;AAE1D,6DAAqC;AAQrC,SAAgB,MAAM,CAAC,KAAa;IAChC,MAAM,IAAI,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjC,CAAC;AAHD,wBAGC;AAQD,SAAgB,WAAW,CAAC,OAAgB,EAAE,IAAY;IACtD,MAAM,EAAE,GAAG,MAAM,CACb,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CACrC,CAAC;IAEF,OAAO,kBAAQ,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5D,CAAC;AAND,kCAMC;AAOD,SAAgB,YAAY,CAAC,QAAgB;IACzC,MAAM,EAAE,GAAG,QAAQ,CAAC,eAAe,CAAC;QAChC,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;KACzB,CAAC,CAAC;IAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC3B,gBAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEtB,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE;YACvB,EAAE,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,CAAC,MAAM,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAdD,oCAcC;AAQD,SAAgB,YAAY,CACxB,aAAoC,IAAI;IAExC,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvC,QAAQ,SAAS,EAAE;QACf,KAAK,GAAG;YACJ,OAAO,IAAI,GAAG,IAAI,CAAC;QACvB,KAAK,GAAG;YACJ,OAAO,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;QAC5B,KAAK,GAAG;YACJ,OAAO,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACjC,KAAK,GAAG;YACJ,OAAO,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACtC;YACI,gBAAM,CAAC,KAAK,CAAC,sBAAsB,SAAS,EAAE,CAAC,CAAC;YAChD,gBAAM,CAAC,KAAK,CAAC,iEAAiE,CAAC,CAAC;YAChF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;AACL,CAAC;AApBD,oCAoBC;AAMD,SAAgB,oBAAoB;IAChC,OAAO,uBAAI,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,8BAAc,CAAC,UAAU,CAAC,CAAC;AAC9D,CAAC;AAFD,oDAEC","sourcesContent":["import crypto from \"crypto\";\nimport * as readline from \"readline\";\n\nimport date from \"date-and-time\";\nimport { ObjectId } from \"mongodb\";\n\nimport { GENERAL_CONFIG } from \"../configs/global.config\";\nimport NsGeneral from \"../types/general\";\nimport logger from \"../utils/logger\";\n\n\n/**\n * Encode a string to sha256 truncated to 24 character.\n * @param input The input string.\n * @returns The sha256 encoded string.\n */\nexport function sha256(input: string) {\n    const hash = crypto.createHash(\"sha256\").update(input).digest(\"hex\");\n    return hash.substring(0, 24);\n}\n\n/**\n * Get the MongoDB object ID from the bot name.\n * @param sandbox If the bot is running in sandbox mode.\n * @param name The bot name.\n * @returns The MongoDB object ID.\n */\nexport function getObjectId(sandbox: boolean, name: string) {\n    const ID = sha256(\n        sandbox ? `${name}-sandbox` : name\n    );\n\n    return ObjectId.createFromHexString(ID).toString(\"hex\");\n}\n\n/**\n * Asks the user for input and returns the answer.\n * @param question The question to ask the user.\n * @returns The answer.\n */\nexport function getUserInput(question: string): Promise<string> {\n    const rl = readline.createInterface({\n        input: process.stdin,\n        output: process.stdout\n    });\n\n    return new Promise((resolve) => {\n        logger.warn(question);\n\n        rl.question(\"\", (answer) => {\n            rl.close();\n            resolve(answer);\n        });\n    });\n}\n\n/**\n * Get the time data in ms from a time string (FATAL).\n * These time strings are similar to the ones used on Binance Spot.\n * @param timeString The time string.\n * @returns The time in ms.\n */\nexport function getTimeframe(\n    timeString: NsGeneral.IsTimeframe = \"1m\"\n) {\n    const time = parseInt(timeString.slice(0, -1));\n    const timeframe = timeString.slice(-1);\n\n    switch (timeframe) {\n        case \"s\":\n            return time * 1000;\n        case \"m\":\n            return time * 60 * 1000;\n        case \"h\":\n            return time * 60 * 60 * 1000;\n        case \"d\":\n            return time * 24 * 60 * 60 * 1000;\n        default:\n            logger.error(`Invalid timeframe: ${timeframe}`);\n            logger.error(\"Available timeframes: 30s, 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 1d\");\n            process.exit(1);\n    }\n}\n\n/**\n * Get the current date string.\n * @returns The current date string.\n */\nexport function getCurrentDateString() {\n    return date.format(new Date(), GENERAL_CONFIG.dateFormat);\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"948828176b2bd6d5f172c4af6fdeb39a410cdd25","contentHash":"c38382cfb5e6ab38c9791e575eebf9f227662e1aa512928a078107944066f9f6"},"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\configs\\global.config.ts":{"path":"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\configs\\global.config.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":83}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":9,"column":0},"end":{"line":17,"column":2}},"4":{"start":{"line":18,"column":0},"end":{"line":24,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/configs/global.config.ts","sources":["C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/configs/global.config.ts"],"names":[],"mappings":";;;AAGa,QAAA,cAAc,GAAG;IAC1B,OAAO,EAAE,KAAK;IACd,6BAA6B,EAAE,CAAC;IAChC,UAAU,EAAE,qBAAqB;CACpC,CAAC;AAKW,QAAA,cAAc,GAAG;IAC1B,YAAY,EAAE,IAAI;IAClB,oBAAoB,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACzC,WAAW,EAAE,CAAC;IACd,YAAY,EAAE,GAAG;IACjB,aAAa,EAAE,CAAC;IAChB,WAAW,EAAE,CAAC;IAGd,oBAAoB,EAAE,aAAa;CACtC,CAAC;AAKW,QAAA,eAAe,GAAG;IAC3B,kBAAkB,EAAE,UAAU;IAC9B,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,uBAAuB;IAClD,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,uBAAuB;IACrD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;IACnC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;CACzC,CAAC","sourcesContent":["/**\n * General configuration.\n */\nexport const GENERAL_CONFIG = {\n    verbose: false,                     // Set the winston logger to verbose mode\n    timeframeFactorForGeneralLoop: 4,   // The timeframe factor for the general loop (x4 by default)\n    dateFormat: \"YYYY-MM-DD HH:mm:ss\"   // Date format\n};\n\n/**\n * Network configuration.\n */\nexport const NETWORK_CONFIG = {\n    checkNetwork: true,                         // Check network reliability\n    checkNetworkInterval: 1000 * 60 * 60 * 24,  // 1 day\n    jitterLimit: 5,                             // ms\n    latencyLimit: 100,                          // ms\n    downloadLimit: 1,                           // Mo/s\n    uploadLimit: 1,                             // Mo/s\n\n    // List of MongoDB collections\n    botObjectsCollection: \"bot_objects\"         // Collection for the bot objects\n};\n\n/**\n * Exchange configuration.\n */\nexport const EXCHANGE_CONFIG = {\n    sandboxTradingPair: \"BNB/BUSD\",                         // The trading pair to use in sandbox mode\n    sandboxApiKey: process.env.BINANCE_SANDBOX_API_KEY,     // The API key to use in sandbox mode\n    sandboxApiSecret: process.env.BINANCE_SANDBOX_API_SEC,  // The API secret to use in sandbox mode\n    apiKey: process.env.BINANCE_API_KEY,                    // The API key to use in production mode\n    apiSecret: process.env.BINANCE_API_SEC                  // The API secret to use in production mode\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9084e15f32e8a9138be0437558c7656e2eb0298","contentHash":"ed4409153fd8c75935ce5598163a9819613905b9ae9424ddd2688db4a72d8e1a"},"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\utils\\logger.ts":{"path":"C:\\Users\\david\\OneDrive\\Document\\GitHub\\genesis\\packages\\server\\src\\utils\\logger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":21},"end":{"line":11,"column":3}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":79}},"5":{"start":{"line":12,"column":18},"end":{"line":12,"column":24}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"8":{"start":{"line":16,"column":20},"end":{"line":21,"column":2}},"9":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":17}},"12":{"start":{"line":22,"column":15},"end":{"line":37,"column":2}},"13":{"start":{"line":38,"column":0},"end":{"line":38,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":38},"end":{"line":9,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":42},"end":{"line":16,"column":43}},"loc":{"start":{"line":16,"column":52},"end":{"line":21,"column":1}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},{"start":{"line":13,"column":0},"end":{"line":15,"column":1}}],"line":13},"1":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":1},"f":{"0":0,"1":0},"b":{"0":[0,1],"1":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/utils/logger.ts","sources":["C:/Users/david/OneDrive/Document/GitHub/genesis/packages/server/src/utils/logger.ts"],"names":[],"mappings":";;AAAA,qCAA2D;AAE3D,4DAA0D;AAM1D,MAAM,YAAY,GAAG,gBAAM,CAAC,OAAO,CAC/B,gBAAM,CAAC,SAAS,CAAC;IACb,MAAM,EAAE,qBAAqB;CAChC,CAAC,EACF,gBAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;IACnB,OAAO,IAAI,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KACnD,IAAI,CAAC,OACT,EAAE,CAAC;AACP,CAAC,CAAC,EACF,gBAAM,CAAC,QAAQ,CAAC;IACZ,GAAG,EAAE,IAAI;CACZ,CAAC,CACL,CAAC;AAKF,IAAI,WAAW,GAAG,MAAM,CAAC;AACzB,IAAI,8BAAc,CAAC,OAAO,EAAE;IACxB,WAAW,GAAG,OAAO,CAAC;CACzB;AAKD,MAAM,WAAW,GAAG,IAAA,gBAAM,EAAC,CAAC,IAAI,EAAI,EAAE;IAClC,IAAI,IAAI,CAAC,KAAK,KAAK,OAAO,EAAE;QACxB,OAAO,IAAI,CAAC;KACf;IACD,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC,CAAC;AAKH,MAAM,MAAM,GAAG,IAAA,sBAAY,EAAC;IACxB,MAAM,EAAE,YAAY;IACpB,UAAU,EAAE;QACR,IAAI,oBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;QAC9C,IAAI,oBAAU,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAE,iBAAiB;YAC3B,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,gBAAM,CAAC,OAAO,CAAC,gBAAM,CAAC,UAAU,EAAE,EAAE,gBAAM,CAAC,IAAI,EAAE,CAAC;SAC7D,CAAC;QACF,IAAI,oBAAU,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAE,iBAAiB;YAC3B,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,gBAAM,CAAC,OAAO,CAAC,gBAAM,CAAC,UAAU,EAAE,EAAE,gBAAM,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC;SAC5E,CAAC;KACL;CACJ,CAAC,CAAC;AAGH,kBAAe,MAAM,CAAC","sourcesContent":["import { createLogger, format, transports } from \"winston\";\n\nimport { GENERAL_CONFIG } from \"../configs/global.config\";\n\n\n/**\n * Logger format.\n */\nconst loggerFormat = format.combine(\n    format.timestamp({\n        format: \"YYYY-MM-DD HH:mm:ss\"\n    }),\n    format.printf((info) => {\n        return `[${info.timestamp}] [${info.level.toUpperCase()}] ${\n            info.message\n        }`;\n    }),\n    format.colorize({\n        all: true,\n    })\n);\n\n/**\n * Logger level.\n */\nlet loggerLevel = \"info\";\nif (GENERAL_CONFIG.verbose) {\n    loggerLevel = \"silly\";\n}\n\n/**\n * Winston debug filter.\n */\nconst debugFilter = format((info, ) => {\n    if (info.level === \"debug\") {\n        return info;\n    }\n    return false;\n});\n\n/**\n * Winston general formatted logger.\n */\nconst logger = createLogger({\n    format: loggerFormat,\n    transports: [\n        new transports.Console({ level: loggerLevel }),\n        new transports.File({\n            filename: \"logs/errors.log\",\n            level: \"error\",\n            format: format.combine(format.uncolorize(), format.json())\n        }),\n        new transports.File({\n            filename: \"logs/debugs.log\",\n            level: \"debug\",\n            format: format.combine(format.uncolorize(), format.json(), debugFilter())\n        })\n    ],\n});\n\n\nexport default logger;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1b544f2f38bdf0e13a92f40091927a4e74ae25cd","contentHash":"8e18ef2156bd7985b636c42be0c02a1dc66aaaea0011553e3246f303e7c052e0"}}